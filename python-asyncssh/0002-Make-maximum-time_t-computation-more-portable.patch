From 1a6467a03b6546e7f164c68ac8161c0315cb254f Mon Sep 17 00:00:00 2001
From: Georg Sauthoff <mail@georg.so>
Date: Tue, 21 Aug 2018 21:23:09 +0200
Subject: [PATCH] Make maximum time_t computation more portable

i.e. to 32 Bit systems where the `datetime.datetime.max` value
overflows time_t
---
 asyncssh/crypto/x509.py | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/asyncssh/crypto/x509.py b/asyncssh/crypto/x509.py
index 8718472..cb1fb8d 100644
--- a/asyncssh/crypto/x509.py
+++ b/asyncssh/crypto/x509.py
@@ -50,7 +50,16 @@ if sys.platform == 'win32': # pragma: no cover
     _gen_time_max = datetime(2999, 12, 31, 23, 59, 59, 999999,
                              tzinfo=timezone.utc).timestamp() - 1
 else:
-    _gen_time_max = datetime.max.replace(tzinfo=timezone.utc).timestamp() - 1
+    _gen_time_max = None
+    for i in (datetime.max.replace(tzinfo=timezone.utc).timestamp() - 1, 2**32-1, 2**31-1):
+        try:
+            datetime.utcfromtimestamp(i)
+        except OverflowError:
+            continue
+        _gen_time_max = i
+        break
+    if not _gen_time_max:
+        raise RuntimeError("Couldn't find a valid maximum value for datetime.utcfromtimestamp")
 
 
 def _to_generalized_time(t):
-- 
2.14.4

